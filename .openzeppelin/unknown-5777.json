{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7311Eeed39eEa62B1d4C102a4BEf7b0FEAb06B91",
    "txHash": "0x78cb0571f67a034148eea7f1a331df08aa4faa8c29dbc130aa23922a177f6a51"
  },
  "proxies": [
    {
      "address": "0x244b3E5e78AFC259895f65c9e89321E67fd7A0a5",
      "txHash": "0xe8c3707cb23132bd4ae5fc7dafde86ec2318b54b396e67e4b3f6361a4f7f3c43",
      "kind": "transparent"
    },
    {
      "address": "0x5bd9b0DF230Dd5CAf37CF53cb0BC27FB72FB0265",
      "txHash": "0x45c82eff06d1e7ca3cf3969419fe955b90e24b4ff6602a9d1c1e9247c88ad475",
      "kind": "transparent"
    },
    {
      "address": "0x1E69bE69840f24D6De862e768c89352d07087e36",
      "txHash": "0x1ae32e1a8f3a628bf12d8d73de50b9f4b07d58a3459ea709c43ff960c3cc2a65",
      "kind": "transparent"
    },
    {
      "address": "0x2d542548f765FE50B580b3F09E779d0815403DE0",
      "txHash": "0x55d75ef8aa33c30fa83add2c96ac88325646a81b41902982b499183d6f784692",
      "kind": "transparent"
    },
    {
      "address": "0xad12c15d534CCB7eF166986AD276Bec62167fA97",
      "txHash": "0x77b6305c03ce1da1f64c9d1bc46278132d292c3765fa24fb712b2e55a1b37aca",
      "kind": "transparent"
    },
    {
      "address": "0xe96Ab2EE8a37Bfe8Aa2846143449368e9D295c9C",
      "txHash": "0xae351a1ff716a9c72411ef24e3a5cc58d5908087afaf56ecca7a5889aced0f3a",
      "kind": "transparent"
    },
    {
      "address": "0xcA3cE6bf0CB2bbaC5dF3874232AE3F5b67C6b146",
      "txHash": "0xc10d2852f29c63f36a5dab02c759a40221b875812055713c66e05c8d9e8b8dbb",
      "kind": "transparent"
    },
    {
      "address": "0xD59f8Bc37BAead58cbCfD99b03997655A13f56d9",
      "txHash": "0x74721c06636344f37c0016292d5a76c23c976021ecd171f26e45db0fe17b3b3a",
      "kind": "transparent"
    },
    {
      "address": "0x83473580305194030C924691b3d340010701eC6C",
      "txHash": "0x009c3c5ceb7d4fc629d3a50149559ac3ab555cc0ddcfd3a5370f412b6cb1ad0a",
      "kind": "transparent"
    },
    {
      "address": "0x8e60e21Bb6190396F94579361bE18A4Ada685445",
      "txHash": "0x7086a29f33f5bc19bb2ea0b7bf7c7b76795c6c38ed38f29a1eaacc62714420ed",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f2944f2d5f68554b01edd120f49acb109d791233e8d380e963ea3dd4275227fd": {
      "address": "0x692023cEDF6Ba2185D2Ed23a5783EFE0Bf12b472",
      "txHash": "0x7f5732d34adfdc8f4a8e4238ceacfb52b782bba8ef19a20b4fcb87bf501b5234",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VeTokenMinter",
            "label": "veToken",
            "type": "t_contract(IERC20Upgradeable)1013",
            "src": "..\\project:\\contracts\\VeTokenMinter.sol:15"
          },
          {
            "contract": "VeTokenMinter",
            "label": "operators",
            "type": "t_struct(AddressSet)3634_storage",
            "src": "..\\project:\\contracts\\VeTokenMinter.sol:16"
          },
          {
            "contract": "VeTokenMinter",
            "label": "totalCliffs",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeTokenMinter.sol:17"
          },
          {
            "contract": "VeTokenMinter",
            "label": "reductionPerCliff",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeTokenMinter.sol:18"
          },
          {
            "contract": "VeTokenMinter",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeTokenMinter.sol:19"
          },
          {
            "contract": "VeTokenMinter",
            "label": "veAssetWeights",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\VeTokenMinter.sol:20"
          },
          {
            "contract": "VeTokenMinter",
            "label": "totalWeight",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeTokenMinter.sol:21"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1013": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)3634_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3333_storage"
              }
            ]
          },
          "t_struct(Set)3333_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "675ec5f00feff9120c932dcbadd370e5ce7b5a56e216d285c3be16c9df1bfafd": {
      "address": "0x41bAd2a818F0cC99a1609B9b6040AE3985a1E6b6",
      "txHash": "0xd8c415c6a62f46a4f6d0e81887c95d3370c8167037bb4b1a8a482b1d45522f37",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0ea9eec162f8663e1f0e1773222ddc3e3644ac2e954f4cb56e7f78cf3a1752b9": {
      "address": "0x04865FEc6A6C5f728ac552C240734f129f6F79E7",
      "txHash": "0xcd52f990015a6e85ebbbc8d262eb16aff8bdbd56316a9f7bde8f7e274103189a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)1013",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:57"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "rewardManager",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:61"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:67"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:68"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "rewardTokenInfo",
            "type": "t_mapping(t_address,t_struct(RewardTokenInfo)13719_storage)",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:71"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "rewardTokens",
            "type": "t_struct(AddressSet)3634_storage",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:73"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "operators",
            "type": "t_struct(AddressSet)3634_storage",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:74"
          },
          {
            "contract": "VE3DRewardPool",
            "label": "extraRewards",
            "type": "t_struct(AddressSet)3634_storage",
            "src": "..\\project:\\contracts\\VE3DRewardPool.sol:76"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1013": {
            "label": "contract IERC20Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_struct(RewardTokenInfo)13719_storage)": {
            "label": "mapping(address => struct VE3DRewardPool.RewardTokenInfo)"
          },
          "t_struct(RewardTokenInfo)13719_storage": {
            "label": "struct VE3DRewardPool.RewardTokenInfo",
            "members": [
              {
                "label": "veAssetDeposits",
                "type": "t_address"
              },
              {
                "label": "ve3TokenRewards",
                "type": "t_address"
              },
              {
                "label": "ve3Token",
                "type": "t_address"
              },
              {
                "label": "queuedRewards",
                "type": "t_uint256"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256"
              },
              {
                "label": "historicalRewards",
                "type": "t_uint256"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint256"
              },
              {
                "label": "currentRewards",
                "type": "t_uint256"
              },
              {
                "label": "periodFinish",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256"
              },
              {
                "label": "userRewardPerTokenPaid",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "rewards",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_struct(AddressSet)3634_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3333_storage"
              }
            ]
          },
          "t_struct(Set)3333_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c5761bebc6887bec3601ad51288625738b3c37fa0ebe71ec22e1a7b6adc3a942": {
      "address": "0x711083Ed5c0bF21e302962B592E779b1baea25f1",
      "txHash": "0xb86761fad2a1480af32a7d23f9f046636b56945f9527d3e461c422e36e913f34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "VE3DLocker",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)1013",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:74"
          },
          {
            "contract": "VE3DLocker",
            "label": "rewardTokens",
            "type": "t_struct(AddressSet)3634_storage",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:77"
          },
          {
            "contract": "VE3DLocker",
            "label": "rewardData",
            "type": "t_mapping(t_address,t_struct(Reward)10757_storage)",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:78"
          },
          {
            "contract": "VE3DLocker",
            "label": "operators",
            "type": "t_struct(AddressSet)3634_storage",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:80"
          },
          {
            "contract": "VE3DLocker",
            "label": "rewardDistributors",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:89"
          },
          {
            "contract": "VE3DLocker",
            "label": "userRewardPerTokenPaid",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:92"
          },
          {
            "contract": "VE3DLocker",
            "label": "rewards",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:93"
          },
          {
            "contract": "VE3DLocker",
            "label": "lockedSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:96"
          },
          {
            "contract": "VE3DLocker",
            "label": "epochs",
            "type": "t_array(t_struct(Epoch)10777_storage)dyn_storage",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:97"
          },
          {
            "contract": "VE3DLocker",
            "label": "balances",
            "type": "t_mapping(t_address,t_struct(Balances)10762_storage)",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:100"
          },
          {
            "contract": "VE3DLocker",
            "label": "userLocks",
            "type": "t_mapping(t_address,t_array(t_struct(LockedBalance)10767_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:101"
          },
          {
            "contract": "VE3DLocker",
            "label": "kickRewardPerEpoch",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:106"
          },
          {
            "contract": "VE3DLocker",
            "label": "kickRewardEpochDelay",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:107"
          },
          {
            "contract": "VE3DLocker",
            "label": "isShutdown",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:110"
          },
          {
            "contract": "VE3DLocker",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:113"
          },
          {
            "contract": "VE3DLocker",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:114"
          },
          {
            "contract": "VE3DLocker",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\VE3DLocker.sol:115"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1013": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(AddressSet)3634_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3333_storage"
              }
            ]
          },
          "t_struct(Set)3333_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Reward)10757_storage)": {
            "label": "mapping(address => struct VE3DLocker.Reward)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Reward)10757_storage": {
            "label": "struct VE3DLocker.Reward",
            "members": [
              {
                "label": "isVeAsset",
                "type": "t_bool"
              },
              {
                "label": "tokenDecimals",
                "type": "t_uint256"
              },
              {
                "label": "periodFinish",
                "type": "t_uint40"
              },
              {
                "label": "rewardRate",
                "type": "t_uint208"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint40"
              },
              {
                "label": "rewardPerTokenStored",
                "type": "t_uint208"
              },
              {
                "label": "queuedRewards",
                "type": "t_uint256"
              },
              {
                "label": "ve3Token",
                "type": "t_address"
              },
              {
                "label": "ve3TokenStaking",
                "type": "t_address"
              },
              {
                "label": "veAssetDeposits",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_uint208": {
            "label": "uint208"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_struct(Epoch)10777_storage)dyn_storage": {
            "label": "struct VE3DLocker.Epoch[]"
          },
          "t_struct(Epoch)10777_storage": {
            "label": "struct VE3DLocker.Epoch",
            "members": [
              {
                "label": "supply",
                "type": "t_uint224"
              },
              {
                "label": "date",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_struct(Balances)10762_storage)": {
            "label": "mapping(address => struct VE3DLocker.Balances)"
          },
          "t_struct(Balances)10762_storage": {
            "label": "struct VE3DLocker.Balances",
            "members": [
              {
                "label": "locked",
                "type": "t_uint112"
              },
              {
                "label": "nextUnlockIndex",
                "type": "t_uint32"
              }
            ]
          },
          "t_uint112": {
            "label": "uint112"
          },
          "t_mapping(t_address,t_array(t_struct(LockedBalance)10767_storage)dyn_storage)": {
            "label": "mapping(address => struct VE3DLocker.LockedBalance[])"
          },
          "t_array(t_struct(LockedBalance)10767_storage)dyn_storage": {
            "label": "struct VE3DLocker.LockedBalance[]"
          },
          "t_struct(LockedBalance)10767_storage": {
            "label": "struct VE3DLocker.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint112"
              },
              {
                "label": "unlockTime",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9deb2610f2f2f7c6c0deb54ada11ecec23b896614d17d49b05f2bd4bf676aa16": {
      "address": "0xBFd63cB1cC642C651bb5249eF3dbb945052fa60D",
      "txHash": "0xa1f4d38007f3c2946c1f59ed5ab260e23089b925490ce8af01b66977602aff09",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "VoterProxyV2",
            "label": "veAsset",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:21"
          },
          {
            "contract": "VoterProxyV2",
            "label": "escrow",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:22"
          },
          {
            "contract": "VoterProxyV2",
            "label": "gaugeProxy",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:23"
          },
          {
            "contract": "VoterProxyV2",
            "label": "minter",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:24"
          },
          {
            "contract": "VoterProxyV2",
            "label": "owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:26"
          },
          {
            "contract": "VoterProxyV2",
            "label": "operator",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:27"
          },
          {
            "contract": "VoterProxyV2",
            "label": "depositor",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:28"
          },
          {
            "contract": "VoterProxyV2",
            "label": "name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:29"
          },
          {
            "contract": "VoterProxyV2",
            "label": "escrowModle",
            "type": "t_enum(EscrowModle)9616",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:30"
          },
          {
            "contract": "VoterProxyV2",
            "label": "protectedTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:32"
          },
          {
            "contract": "VoterProxyV2",
            "label": "stashPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:33"
          },
          {
            "contract": "VoterProxyV2",
            "label": "votes",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "..\\project:\\contracts\\VoterProxyV2.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_enum(EscrowModle)9616": {
            "label": "enum IVoteEscrow.EscrowModle",
            "members": [
              "PICKLE",
              "CURVE",
              "RIBBON",
              "IDLE",
              "ANGLE",
              "BALANCER"
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3b0f365cc1b5cf9eadb65c8630f344d06d6ac804e333c0943ddf1567db06bffc": {
      "address": "0xa7d26Ad0aBE05A1a08B5d83c6A87a6F872426a65",
      "txHash": "0x1ca4b91b27b48063f4f318a4003c31f0392d2bd2a5e84e2bdcfcbd155ea1878d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "Booster",
            "label": "lockIncentive",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Booster.sol:27"
          },
          {
            "contract": "Booster",
            "label": "stakerIncentive",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Booster.sol:29"
          },
          {
            "contract": "Booster",
            "label": "stakerLockIncentive",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Booster.sol:31"
          },
          {
            "contract": "Booster",
            "label": "earmarkIncentive",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Booster.sol:33"
          },
          {
            "contract": "Booster",
            "label": "platformFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Booster.sol:35"
          },
          {
            "contract": "Booster",
            "label": "lockFeesIncentive",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Booster.sol:39"
          },
          {
            "contract": "Booster",
            "label": "stakerLockFeesIncentive",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Booster.sol:40"
          },
          {
            "contract": "Booster",
            "label": "owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:42"
          },
          {
            "contract": "Booster",
            "label": "feeManager",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:43"
          },
          {
            "contract": "Booster",
            "label": "poolManager",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:44"
          },
          {
            "contract": "Booster",
            "label": "staker",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:45"
          },
          {
            "contract": "Booster",
            "label": "minter",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:46"
          },
          {
            "contract": "Booster",
            "label": "veAsset",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:47"
          },
          {
            "contract": "Booster",
            "label": "feeDistro",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:48"
          },
          {
            "contract": "Booster",
            "label": "rewardFactory",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:49"
          },
          {
            "contract": "Booster",
            "label": "stashFactory",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:50"
          },
          {
            "contract": "Booster",
            "label": "tokenFactory",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:51"
          },
          {
            "contract": "Booster",
            "label": "rewardArbitrator",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:52"
          },
          {
            "contract": "Booster",
            "label": "voteDelegate",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:53"
          },
          {
            "contract": "Booster",
            "label": "treasury",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:54"
          },
          {
            "contract": "Booster",
            "label": "stakerRewards",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:55"
          },
          {
            "contract": "Booster",
            "label": "stakerLockRewards",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:56"
          },
          {
            "contract": "Booster",
            "label": "lockRewards",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:57"
          },
          {
            "contract": "Booster",
            "label": "lockFees",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:58"
          },
          {
            "contract": "Booster",
            "label": "feeToken",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Booster.sol:59"
          },
          {
            "contract": "Booster",
            "label": "isShutdown",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\Booster.sol:61"
          },
          {
            "contract": "Booster",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)5260_storage)dyn_storage",
            "src": "..\\project:\\contracts\\Booster.sol:73"
          },
          {
            "contract": "Booster",
            "label": "gaugeMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Booster.sol:74"
          },
          {
            "contract": "Booster",
            "label": "gaugeTokenMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Booster.sol:75"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(PoolInfo)5260_storage)dyn_storage": {
            "label": "struct Booster.PoolInfo[]"
          },
          "t_struct(PoolInfo)5260_storage": {
            "label": "struct Booster.PoolInfo",
            "members": [
              {
                "label": "lptoken",
                "type": "t_address"
              },
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "gauge",
                "type": "t_address"
              },
              {
                "label": "veAssetRewards",
                "type": "t_address"
              },
              {
                "label": "stash",
                "type": "t_address"
              },
              {
                "label": "shutdown",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "04487160752b58fe0fd304c41a6b159e0a5f27a25d0a0166fdaec8975652fd45": {
      "address": "0xAb3bcE27F31Ca36AAc6c6ec2bF3e79569105ec2c",
      "txHash": "0x084ca0266910fb9fd01b5d6fab8c3bf8a1fe4917d9526cc911bdfa661f8e7efb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "lockIncentive",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:20"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "veAsset",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:23"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "escrow",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:24"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "feeManager",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:25"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "staker",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:26"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "minter",
            "type": "t_address",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:27"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "incentiveVeAsset",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:28"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "unlockTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:29"
          },
          {
            "contract": "VeAssetDepositor",
            "label": "maxTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\VeAssetDepositor.sol:30"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
